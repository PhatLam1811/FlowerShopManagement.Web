@model PaginatedList<OrderModel>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="row">
    <div class="col-lg-2 d-lg-block collapse borderCustom1 um mt-3">
        <partial name="_Filter" model=@Model />
    </div>

    <div class="col-lg-10 col-12 mt-3 mt-lg-0">
        <div class="d-flex justify-content-end d-lg-none">
            <button class="filter-icon border-0 fs-3" data-bs-toggle="collapse" data-bs-target=".um" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="h5">Filter</span>
            </button>
        </div>

        <div class="row mt-3">
            <div class="" id="hihi">
                <partial name="_ViewAll" model=@Model view-data="ViewData" />
            </div>
        </div>
        <nav class="container" id="pagination">
            <partial name="_Pagination" model=@Model view-data="ViewData" />
        </nav>
    </div>

</div>

<button class="btn btn-primary icon-plus rounded position-fixed" id="btn-create" style="right:0; bottom:60px;" onclick="location.href = '@(Url.Action("Create", "Order"))'">Create new Order</button>