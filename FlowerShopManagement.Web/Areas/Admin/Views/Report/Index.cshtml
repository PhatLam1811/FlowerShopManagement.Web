@{
    var months = new List<int?>() { null, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
    var years = new List<int?>() { null, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030 };
}

<style>
    .analyze-btn {
        width: fit-content;
        height: 40px;
        text-align: center;
        margin-top: 1.4rem;
        padding: 0rem;
    }
</style>

<script>
    function selectElement(id, valueToSelect) {
        let element = document.getElementById(id);
        element.value = valueToSelect;
    }
</script>

<div class="row mt-3">
    @*fiter*@
    <form asp-action="Index" asp-area="Admin" asp-controller="Report" method="get">
        <div class="d-flex align-items-end justify-content-between mt-3 mb-4">
            <div class="d-flex gap-3">
                <div class="form-group">
                    <label class="form-label h6" for="selectDate">Date</label>
                    <input id="selectDate" type="datetime" class="form-control" name="date" value="@ViewData["Date"]">
                </div>
                <div class="form-group">
                    <label class="form-label h6" for="selectMonth">Month</label>
                    <select class="form-select" asp-items="@(new SelectList(months))"
                            id="selectMonth" aria-label="Floating label select example" name="month">
                    </select>
                    <script>selectElement('selectMonth', @ViewData["Month"]);</script>
                </div>
                <div class="form-group">
                    <label class="form-label h6" for="selectYear">Year</label>
                    <select class="form-select" asp-items="@(new SelectList(years))"
                            id="selectYear" aria-label="Floating label select example" name="year">
                    </select>
                    <script>selectElement('selectYear', @ViewData["Year"]);</script>
                </div>
                <button type="submit" class="btn btn-primary analyze-btn">Analyze</button>
            </div>
            <button type="button" class="btn btn-primary" onclick="window.print()">Preview and Print Report</button>
        </div>
    </form>
</div>
<div id="hix">

<div class="row mt-2">
	<div class="col-lg-7 col-12">
		<p class="h6 text-color-secondary">Overview</p>
		<div class="">
			<canvas id="lineChart" class="h-auto"></canvas>
		</div>
	</div>
	<div class="col-lg-5 row h-fit gy-3">
		<div class="col-6 position-relative">
			<div class="d-flex flex-column gap-2 align-items-center border border-2 border-app radius-2 p-3 my-shadow-2">
				<p class="h2 text-secondary">@ViewData["WaitingOrders"]</p>
				<p class="h5">Waiting Orders</p>
			</div>
		</div>
		<div class="col-6 position-relative">
			<div class="d-flex flex-column gap-2 align-items-center border border-2 border-app radius-2 p-3 my-shadow-2">
				<p class="h2 text-secondary">@ViewData["OutOfStocks"]</p>
				<p class="h5">Out-Of-Stocks</p>
			</div>
		</div>
		<div class="col-6 position-relative">
			<div class="d-flex flex-column gap-2 align-items-center border border-2 border-app radius-2 p-3 my-shadow-2">
				<p class="h2 text-secondary">@ViewData["CanceledOrders"]</p>
				<p class="h5">Canceled Orders</p>
			</div>
		</div>
		<div class="col-6 position-relative">
			<div class="d-flex flex-column gap-2 align-items-center border border-2 border-app radius-2 p-3 my-shadow-2">
				<p class="h2 text-secondary">@ViewData["LowOnStocks"]</p>
				<p class="h5">Low-On-Stocks</p>
			</div>
		</div>
		<div class="col-6 position-relative">
			<div class="d-flex flex-column gap-2 align-items-center border border-2 border-app radius-2 p-3 my-shadow-2">
				<p class="h2 text-secondary">@ViewData["CompletedOrders"]</p>
				<p class="h5">Completed Orders</p>
			</div>
		</div>
		<div class="col-6 position-relative">
			<div class="d-flex flex-column gap-2 align-items-center border border-2 border-app radius-2 p-3 my-shadow-2">
				<p class="h2 text-secondary">@ViewData["ProductsCount"]</p>
				<p class="h5">Total Products</p>
			</div>
		@*	<div class="position-absolute top-10 end-10">
				<i class="fa-solid fa-arrow-up-short-wide fs-4 text-info"></i>
				<p class="small-caption">2.5%</p>
			</div>*@
		</div>
	</div>
</div>

    <div class="row mt-5">
        <div class="col-lg-4">
            <p class="h6 text-color-secondary">Valuable Customers</p>
            <table class="table myaccordion table-hover">
                <thead>
                    <tr class="">
                        <th>#</th>
                        <th>Name</th>
                        <th>Orders</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var topCustomers = (List<ValuableCustomerModel>?)ViewData["TopCustomers"];

                        if (topCustomers != null)
                        {
                            for (int i = 0; i < topCustomers.Count; i++)
                            {
                                            <tr class="align-middle">
                                                <td>@(i + 1)</td>
                                                <td>@topCustomers[i]._id</td>
                                                <td class="">@topCustomers[i].numberOfOrders</td>
                                            </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="col-lg-4">
            <p class="h6 text-color-secondary">Profitable Products</p>
            <table class="table myaccordion table-hover">
                <thead>
                    <tr class="">
                        <th>#</th>
                        <th>Name</th>
                        <th>Sold</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var profitableProducts = (List<ProfitableProductModel>?)ViewData["ProfitableProducts"];

                        if (profitableProducts != null)
                        {
                            for (int i = 0; i < profitableProducts.Count; i++)
                            {
                                            <tr class="align-middle">
                                                <td>@(i + 1)</td>
                                                <td>@profitableProducts[i]._id</td>
                                                <td class="">@profitableProducts[i].soldNumber</td>
                                            </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="col-lg-4">
            <p class="h6 text-color-secondary">Categories</p>
            <canvas id="donutChart" class="h-auto"></canvas>
        </div>
    </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>

@{
    ChartJSCore.Models.Chart? donutChart = (ChartJSCore.Models.Chart?)ViewData["DonutChart"];
    ChartJSCore.Models.Chart? lineChart = (ChartJSCore.Models.Chart?)ViewData["LineChart"];
}

@section Scripts {
    <script src="~/lib/Chart.js/dist/Chart.js"></script>
    <script>
        @Html.Raw(lineChart?.CreateChartCode("lineChart"));
        @Html.Raw(donutChart?.CreateChartCode("donutChart"));
    </script>
}